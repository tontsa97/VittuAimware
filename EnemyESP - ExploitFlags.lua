local ExploitIsActive;
local ForceFakelagIsActive;
local localplayer = entities:GetLocalPlayer()


local vis_overlay_enemy_flags = gui.Reference("Visuals", "Overlay", "Enemy", "Flags")
local switch_exploitflags_fakelag_exploits = gui.Checkbox(vis_overlay_enemy_flags, "exploitflags_fakelag_exploits", " Fakelag- and Exploitflags", false)
local exploitflags_fakelag_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_fakelag_color", "", 107, 129, 227)
local exploitflags_exploits_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_exploits_color", "", 247, 204, 12)
local exploitflags_bot = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_bot_color", "", 247, 204, 12)
local exploitflags_bot_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_bot_color", "", 247, 204, 12)
local exploitflags_next_shot = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_next_shot", "", 247, 204, 12)
local exploitflags_next_shot_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_next_shot_color", "", 247, 204, 12)
local exploitflags_distance = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_distance", "", 247, 204, 12)
local exploitflags_distance_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_distance_color", "", 247, 204, 12)



--disable lby on exploit
local function antilbyonexploit()   
    if not localplayer or not localplayer:IsAlive() then


        return
    end  
	
	if ExploitIsActive == true then
        gui.SetValue("rbot.antiaim.advanced.antialign", 1)
    elseif ForceFakelagIsActive == true then
        gui.SetValue("rbot.antiaim.advanced.antialign", 0)
    end
end
callbacks.Register("Draw", antilbyonexploit)


local function conditions()
    if not localplayer or not localplayer:IsAlive() then 
        return
    end
    
    local inaircheck = localplayer:GetPropBool("m_fFlags")
    local localplayervelocity = localplayer:GetPropVector("localdata", "m_vecVelocity[0]"):Length()
    local inaccuracy = localplayer:GetWeaponInaccuracy()
    local localplayerweapon = localplayer:GetWeaponID()
    local slowwalkkey = gui.GetValue("rbot.accuracy.movement.slowkey")
    local fakeduckkey = gui.GetValue("rbot.antiaim.extra.fakecrouchkey")
    local hideshotson = gui.GetValue("rbot.antiaim.condition.shiftonshot")
    if (localplayervelocity <= 25 and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17)))) then
        localplayerstanding = true
        localplayerslowwalking = false
        localplayermoving = false
        localplayerinair = false
    elseif localplayervelocity > 25 and gui.GetValue("rbot.accuracy.movement.slowkey") ~= 0 and input.IsButtonDown(slowwalkkey)==false and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = false
        localplayermoving = true
        localplayerinair = false
    elseif localplayervelocity >= 10 and gui.GetValue("rbot.accuracy.movement.slowkey") ~= 0 and input.IsButtonDown(slowwalkkey) == true and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = true
        localplayermoving = false
        localplayerinair = false
    elseif (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = false
        localplayermoving = false
        localplayerinair = true  
    end
    
    if localplayerweapon == 2 or localplayerweapon == 3 or localplayerweapon == 4 or localplayerweapon == 30 or localplayerweapon == 32 or localplayerweapon == 36 or localplayerweapon == 61 or localplayerweapon == 63 then
        weaponclass = "pistol"
    elseif localplayerweapon == 9 then
        weaponclass = "sniper"
    elseif localplayerweapon == 40 then
        weaponclass = "scout"
    elseif localplayerweapon == 1 then
        weaponclass = "hpistol"
    elseif localplayerweapon == 17 or localplayerweapon == 19 or localplayerweapon == 23 or localplayerweapon == 24 or localplayerweapon == 26 or localplayerweapon == 33 or localplayerweapon == 34 then
        weaponclass = "smg"
    elseif localplayerweapon == 7 or localplayerweapon == 8 or localplayerweapon == 10 or localplayerweapon == 13 or localplayerweapon == 16 or localplayerweapon == 39 or localplayerweapon == 61 then
        weaponclass = "rifle"
    elseif localplayerweapon == 25 or localplayerweapon == 27 or localplayerweapon == 29 or localplayerweapon == 35 then
        weaponclass = "shotgun"
    elseif localplayerweapon == 38 or localplayerweapon == 11 then
        weaponclass = "asniper"
    elseif localplayerweapon == 28 or localplayerweapon == 14 then
        weaponclass = "lmg"
    elseif localplayerweapon == 505 or localplayerweapon == 506 or localplayerweapon == 507 or localplayerweapon == 508 or localplayerweapon == 509 or localplayerweapon == 510 or localplayerweapon == 511 or localplayerweapon == 512 or localplayerweapon == 513 or localplayerweapon == 514 or localplayerweapon == 515 or localplayerweapon == 516 or localplayerweapon == 517 or localplayerweapon == 518 or localplayerweapon == 519 or localplayerweapon == 520 or localplayerweapon == 521 or localplayerweapon == 522 or localplayerweapon == 523 or localplayerweapon == 524 then
        weaponclass = "knife"
    else
        weaponclass = "shared"
    end

    if gui.GetValue("rbot.hitscan.accuracy."..weaponclass..".doublefire") == 1 or gui.GetValue("rbot.hitscan.accuracy."..weaponclass..".doublefire") == 2 then
        DtIsActive = true
    else
        DtIsActive = false
    end
    if fakeduckkey ~= 0 and input.IsButtonDown(fakeduckkey) == true then
      FdIsActive = true
      ExploitIsActive = false
      ForceFakelagIsActive = false
    elseif fakeduckkey ~= 0 and input.IsButtonDown(fakeduckkey) == false and (DtIsActive == true or hideshotson)  then
      ExploitIsActive = true
      FdIsActive = false
      ForceFakelagIsActive = false
    else
      ExploitIsActive = false
      FdIsActive = false
      ForceFakelagIsActive = true
    end
end

callbacks.Register("Draw", conditions)


local enemy_lc  =  {
    schetchik_enemy = false,
    lc_factor_enemy = false,
    old_simtime_enemy = 0,
    old_delta_simtime_enemy = 0
}

function rage_flags(builder)
    if not localplayer or not localplayer:IsAlive() then
        return
    end
    local builder_entity = builder:GetEntity()
    local time = globals.CurTime()
    local tickinterval = globals.TickInterval()
    local local_next_shot = localplayer:GetPropEntity('m_hActiveWeapon'):GetPropFloat('LocalActiveWeaponData', 'm_flNextPrimaryAttack')

    if builder_entity:IsPlayer() and builder_entity:IsAlive() and builder_entity:GetTeamNumber() ~= localplayer:GetTeamNumber() then
        --nextshot
        local enemy_next_shot  = builder_entity:GetPropEntity('m_hActiveWeapon'):GetPropFloat('LocalActiveWeaponData', 'm_flNextPrimaryAttack')
        
        --shot earlier flag
        if exploitflags_next_shot:GetValue() and enemy_next_shot ~= nil and local_next_shot ~= nil then

            if enemy_next_shot <= globals.CurTime() then
                enemy_next_shot = globals.CurTime()
            end
            
            if enemy_next_shot < local_next_shot then
                builder:Color(exploitflags_next_shot_color:GetValue())

                builder:AddTextRight("shot")
            end

        end
        --doubletap and fakelags
        if switch_exploitflags_fakelag_exploits:GetValue() then

            local simtime_enemy = builder_entity:GetPropFloat("m_flSimulationTime") 
            local bot_entity = client.GetPlayerInfo(builder_entity:GetIndex()).fakeplayer


            if simtime_enemy ~= enemy_lc.old_simtime_enemy and enemy_lc.schetchik_enemy == false then
                enemy_lc.schetchik_enemy = true
            end

            if enemy_lc.schetchik_enemy == true then
                delta_simtime_enemy = simtime_enemy - enemy_lc.old_simtime_enemy
                enemy_lc.schetchik_enemy = false
                main_delta_simtime_enemy = delta_simtime_enemy - enemy_lc.old_delta_simtime_enemy 
            end
                
            enemy_lc.old_delta_simtime_enemy = delta_simtime_enemy
            enemy_lc.old_simtime_enemy = simtime_enemy

            if main_delta_simtime_enemy < 0 then
                enemy_lc.lc_factor_enemy = false
            else 
                enemy_lc.lc_factor_enemy = true
            end

            fakelags = math.abs(delta_simtime_enemy/tickinterval)

            --enemy's flags
            if fakelags <= 3 and enemy_lc.lc_factor_enemy == false and bot_entity == false then
                builder:Color(exploitflags_exploits_color:GetValue())
                builder:AddTextTop("exploit")
            end

            if fakelags <= 3 and enemy_lc.lc_factor_enemy == true and bot_entity == false then
                builder:Color(exploitflags_exploits_color:GetValue())
                builder:AddTextTop("LC exploit")
            end

            if  fakelags > 3 and bot_entity == false then
                builder:Color(exploitflags_fakelag_color:GetValue())
                builder:AddTextTop("fakelag")
            end
        end

        --bot flag
        if exploitflags_bot:GetValue() then

            local bot_entity = client.GetPlayerInfo(builder_entity:GetIndex()).fakeplayer
            if bot_entity == true then
                builder:Color(exploitflags_bot_color:GetValue())
                builder:AddTextRight("bot")
            end
        end

        --distance
        if exploitflags_distance:GetValue() then
            builder_entity_origin = builder_entity:GetAbsOrigin()
            local_player_origin = localplayer:GetAbsOrigin()
            distance_to_entity = string.format("%0.1f",(vector.Distance({local_player_origin.x, local_player_origin.y, local_player_origin.z}, {builder_entity_origin.x, builder_entity_origin.y, builder_entity_origin.z})/39.37))
            builder:Color(exploitflags_distance_color:GetValue())
            builder:AddTextRight(distance_to_entity .. "m")
        end
    end
end
callbacks.Register("DrawESP", rage_flags)


--***********************************************--

print("♥♥♥ " .. GetScriptName() .. " loaded without Errors ♥♥♥")