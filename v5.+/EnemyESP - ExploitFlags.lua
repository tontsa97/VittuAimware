local localplayer = entities:GetLocalPlayer()

local vis_overlay_enemy_flags = gui.Reference("Visuals", "Overlay", "Enemy", "Flags")
local switch_exploitflags_fakelag_exploits = gui.Checkbox(vis_overlay_enemy_flags, "exploitflags_fakelag_exploits", " Fakelag- and Exploitflags", false)
local exploit = {
flags_fakelag_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_fakelag_color", "", 107, 129, 227),
flags_exploits_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_exploits_color", "", 247, 204, 12),
flags_bot = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_bot_color", "", 247, 204, 12),
flags_bot_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_bot_color", "", 247, 204, 12),
flags_next_shot = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_next_shot", "", 247, 204, 12),
flags_next_shot_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_next_shot_color", "", 247, 204, 12),
flags_distance = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_distance", "", 247, 204, 12),
flags_distance_color = gui.ColorPicker(switch_exploitflags_fakelag_exploits, "exploitflags_distance_color", "", 247, 204, 12)
}
local constants = {};
local patterns =
{
    "%s+";
    "auto";
    "lightmachinegun";
    "submachinegun";
    "heavypistol";
}

local replacements =
{
    "";
    "a";
    "lmg";
    "smg";
    "hpistol";
}

local current_weapon_group = "shared"

local function handleVariables()

    --local data
    local_entity = entities.GetLocalPlayer()
    
    current_weapon_group = string.lower(string.gsub(gui.GetValue("rbot.hitscan.accuracy"), '"', ""))
    for i = 1, #patterns do
        current_weapon_group = string.gsub(current_weapon_group, patterns[i], replacements[i])
    end
	
	--getting current weapon group to use it
constants.SHORT_WEAPON_GROUP =  
{
    pistol = {2, 3, 4, 30, 32, 36, 61, 63}, 
    sniper = {9}, 
    scout = {40}, 
    hpistol = {1, 64}, 
    smg = {17, 19, 23, 24, 26, 33, 34}, 
    rifle = {60, 7, 8, 10, 13, 16, 39}, 
    shotgun = {25, 27, 29, 35}, 
    asniper = {38, 11}, 
    lmg = {28, 14},
    zeus = {31}
}

local function getWeaponGroup()
    if not local_entity or not local_entity:IsAlive() then
        return "shared"
    end

    --get current weapon group
    local local_weapon_id = local_entity:GetWeaponID()

    --iterating over weapon groups
    for group_name, group_weapons in pairs(constants.SHORT_WEAPON_GROUP) do

        --iterating over all weapon ids in weapon grops
        for weapon_id = 1, #group_weapons, 1 do

            --if weapon id == our weapon rerunring group
            if local_weapon_id == group_weapons[weapon_id] then

                return group_name
            end
        end
    end

    --returning shared if not find weapon group
    return "shared"
end

local function conditions()
    if not localplayer or not localplayer:IsAlive() then 
        return
    end
    local inaircheck = localplayer:GetPropBool("m_fFlags")
    local localplayervelocity = localplayer:GetPropVector("localdata", "m_vecVelocity[0]"):Length()
    local inaccuracy = localplayer:GetWeaponInaccuracy()
	
    local slowwalkkey = gui.GetValue("rbot.accuracy.movement.slowkey")
    local fakeduckkey = gui.GetValue("rbot.antiaim.extra.fakecrouchkey")
    if (localplayervelocity <= 25 and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17)))) then
        localplayerstanding = true
        localplayerslowwalking = false
        localplayermoving = false
        localplayerinair = false
    elseif localplayervelocity > 25 and gui.GetValue("rbot.accuracy.movement.slowkey") ~= 0 and input.IsButtonDown(slowwalkkey)==false and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = false
        localplayermoving = true
        localplayerinair = false
    elseif localplayervelocity >= 10 and gui.GetValue("rbot.accuracy.movement.slowkey") ~= 0 and input.IsButtonDown(slowwalkkey) == true and not (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = true
        localplayermoving = false
        localplayerinair = false
    elseif (inaircheck == false or (input.IsButtonDown(32) and input.IsButtonDown(17))) then
        localplayerstanding = false
        localplayerslowwalking = false
        localplayermoving = false
        localplayerinair = true  
    end

    if gui.GetValue("rbot.accuracy.attack." .. current_weapon_group .. ".fire") == '"Defensive Warp Fire"') or (gui.GetValue("rbot.accuracy.attack.shared.fire") == '"Defensive Warp Fire"') then
        DtIsActive = true
    else
        DtIsActive = false
    end
    if fakeduckkey ~= 0 and input.IsButtonDown(fakeduckkey) == true then
        FdIsActive = true
        ExploitIsActive = false
        ForceFakelagIsActive = false
        ShiftFire = false
    elseif fakeduckkey ~= 0 and input.IsButtonDown(fakeduckkey) == false and (DtIsActive == false and gui.GetValue("rbot.accuracy.attack." .. current_weapon_group .. ".fire") ==  '"Shift Fire"') then
        ExploitIsActive = false
        FdIsActive = false
        ForceFakelagIsActive = false
        ShiftFire = true
    elseif fakeduckkey ~= 0 and input.IsButtonDown(fakeduckkey) == false and (DtIsActive == false and gui.GetValue("rbot.accuracy.attack." .. current_weapon_group .. ".fire") == '"Off"') then
        ExploitIsActive = false
        FdIsActive = false
        ForceFakelagIsActive = true
        ShiftFire = false
    end
end

callbacks.Register("Draw", conditions)


local enemy_lc  =  {
    schetchik_enemy = false,
    lc_factor_enemy = false,
    old_simtime_enemy = 0,
    old_delta_simtime_enemy = 0
}

local function rage_flags(builder)
    local localplayer = entities.GetLocalPlayer()
	if not localplayer or not localplayer:IsAlive() then
        return
    end
    local builder_entity = builder:GetEntity()
    local time = globals.CurTime()
    local tickinterval = globals.TickInterval()
    local local_next_shot = localplayer:GetPropEntity('m_hActiveWeapon'):GetPropFloat('LocalActiveWeaponData', 'm_flNextPrimaryAttack')

    if builder_entity:IsPlayer() and builder_entity:IsAlive() and builder_entity:GetTeamNumber() ~= localplayer:GetTeamNumber() then
        --nextshot
        local enemy_next_shot  = builder_entity:GetPropEntity('m_hActiveWeapon'):GetPropFloat('LocalActiveWeaponData', 'm_flNextPrimaryAttack')
        
        --shot earlier flag
        if exploit.flags_next_shot:GetValue() and enemy_next_shot ~= nil and local_next_shot ~= nil then

            if enemy_next_shot <= globals.CurTime() then
                enemy_next_shot = globals.CurTime()
            end
            
            if enemy_next_shot < local_next_shot then
                builder:Color(exploit.flags_next_shot_color:GetValue())

                builder:AddTextRight("shot")
            end

        end
        --doubletap and fakelags
        if switch_exploitflags_fakelag_exploits:GetValue() then

            local simtime_enemy = builder_entity:GetPropFloat("m_flSimulationTime") 
            local bot_entity = client.GetPlayerInfo(builder_entity:GetIndex()).fakeplayer


            if simtime_enemy ~= enemy_lc.old_simtime_enemy and enemy_lc.schetchik_enemy == false then
                enemy_lc.schetchik_enemy = true
            end

            if enemy_lc.schetchik_enemy == true then
                delta_simtime_enemy = simtime_enemy - enemy_lc.old_simtime_enemy
                enemy_lc.schetchik_enemy = false
                main_delta_simtime_enemy = delta_simtime_enemy - enemy_lc.old_delta_simtime_enemy
            end
                
            enemy_lc.old_delta_simtime_enemy = delta_simtime_enemy
            enemy_lc.old_simtime_enemy = simtime_enemy

            if main_delta_simtime_enemy < 0 then
                enemy_lc.lc_factor_enemy = false
            else 
                enemy_lc.lc_factor_enemy = true
            end

            fakelags = math.abs(delta_simtime_enemy/tickinterval)

            --enemy's flags
            if fakelags <= 3 and enemy_lc.lc_factor_enemy == false and bot_entity == false then
                builder:Color(exploit.flags_exploits_color:GetValue())
                builder:AddTextTop("no exploit")
            end

            if fakelags <= 3 and enemy_lc.lc_factor_enemy == true and bot_entity == false then
                builder:Color(exploit.flags_exploits_color:GetValue())
                builder:AddTextTop("lc exploiter")
            end

            if  fakelags > 3 and bot_entity == false then
                builder:Color(exploit.flags_fakelag_color:GetValue())
                builder:AddTextTop("fakelagger")
            end
        end

        --bot flag
        if exploit.flags_bot:GetValue() then
            if bot_entity == true then
                builder:Color(exploit.flags_bot_color:GetValue())
                builder:AddTextRight("bot")
            end
        end

        --distance
        if exploit.flags_distance:GetValue() then
            builder_entity_origin = builder_entity:GetAbsOrigin()
            local_player_origin = localplayer:GetAbsOrigin()
            distance_to_entity = string.format("%0.1f",(vector.Distance({local_player_origin.x, local_player_origin.y, local_player_origin.z}, {builder_entity_origin.x, builder_entity_origin.y, builder_entity_origin.z})/39.37))
            builder:Color(exploit.flags_distance_color:GetValue())
            builder:AddTextRight(distance_to_entity .. "m")
        end
    end
end
callbacks.Register("DrawESP", rage_flags)


--***********************************************--

print("♥♥♥ " .. GetScriptName() .. " loaded without Errors ♥♥♥")